AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD pipeline for GitHub projects
Parameters:
  GitHubOwner:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: Faithtosin
  GitHubRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: db-pipeline
  GitHubBranch:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: main
  CodeBuildEnvironmentImage:
    Type: String
    Default: 'aws/codebuild/standard:4.0'
Resources:
  DBCodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: 1
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:FilterLogEvents'
                  - 'logs:GetLogEvents'
                Resource:
                  - '*'
              - Sid: 2
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:CreateBucket'
                  - 's3:List*'
                  - 's3:PutObject'
                Resource:
                  - '*'
              - Sid: 3
                Effect: Allow
                Action:
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:PutImage'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:InitiateLayerUpload'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSecurityGroupReferences'
                  - 'ec2:DescribeStaleSecurityGroups'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:CreateNetworkInterfacePermission'
                Resource:
                  - '*'
              - Sid: 4
                Effect: Allow
                Action:
                  - 'iam:AddRoleToInstanceProfile'
                  - 'iam:AttachRolePolicy'
                  - 'iam:CreateInstanceProfile'
                  - 'iam:CreatePolicy'
                  - 'iam:CreateRole'
                  - 'iam:GetRole'
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:ListPolicies'
                  - 'iam:ListRoles'
                  - 'iam:PassRole'
                  - 'iam:PutRolePolicy'
                  - 'iam:UpdateAssumeRolePolicy'
                Resource:
                  - '*'
              - Sid: 5
                Effect: Allow
                Action:
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                  - 'kms:ReEncrypt*'
                  - 'kms:GenerateDataKey*'
                  - 'kms:DescribeKey'
                Resource:
                  - '*'
  DBCodeBuilProjectDeployDev:  
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-dev'
      ServiceRole: !GetAtt DBCodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildEnvironmentImage
        EnvironmentVariables:
          - Name: ENV_NAME
            Value: dev
          - Name: DBEndPoint
            Value: moxadb.ci4w4i2sveag.us-west-2.rds.amazonaws.com
          - Name: DBname
            Value: moxadb
          - Name: Port
            Value: 5432
          - Name: DBUser
            Value: MoxaUser
          - Name: Password
            Value: qwerty123456
  DBCodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: 6
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - '*'
              - Sid: 7
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:CreateBucket'
                  - 's3:List*'
                Resource:
                  - '*'
              - Sid: 8
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuildBatches'
                  - 'codebuild:StartBuildBatch'
                Resource: '*'
                Effect: Allow
              - Sid: 9
                Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource:
                  - '*'
              - Sid: 10
                Effect: Allow
                Action:
                  - 'ecs:DescribeServices'
                  - 'ecs:DescribeTaskDefinition'
                  - 'ecs:DescribeTasks'
                  - 'ecs:ListTasks'
                  - 'ecs:RegisterTaskDefinition'
                  - 'ecs:UpdateService'
                Resource:
                  - '*'
  DBCodePipelineArtifactStore:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled
  DBCodePipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: >-
          {{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
        - JsonPath: $.repository.name
          MatchEquals: '{Repo}'
      TargetPipeline: !Ref DBCodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt DBCodePipeline.Version
  DBCodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt DBCodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref DBCodePipelineArtifactStore
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: SourceCode
        - Name: Dev   
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref DBCodeBuilProjectDeployDev
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Qa   
          Actions:
            - Name: Approval
              RunOrder: 2
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: Approve or Reject this change after running tests